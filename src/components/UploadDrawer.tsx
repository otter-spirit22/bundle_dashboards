import{useRef,useState}from'react';import{parseFile}from'../data/loader';import{computeAllMetrics}from'../data/metrics';export default function UploadDrawer(){const[open,setOpen]=useState(false);const[status,setStatus]=useState<string>('');const fileRef=useRef<HTMLInputElement>(null);async function onFile(e:React.ChangeEvent<HTMLInputElement>){const f=e.target.files?.[0];if(!f)return;try{setStatus('Parsing…');const rows=await parseFile(f);setStatus(`Parsed ${rows.length} rows. Computing…`);const metrics=computeAllMetrics(rows);(window as any).__BB_METRICS__=metrics;setStatus(`Computed: BenchScore ${metrics.benchScore}, Depth ${metrics.coverageDepthPct.toFixed(1)}%`);alert('Metrics computed from your file. Navigate to any dashboard to view (demo stores in window.__BB_METRICS__).');}catch(err:any){setStatus(`Error: ${err.message}`)}}return(<><button onClick={()=>setOpen(true)} className='badge border-white/20'>Upload</button>{open&&<div className='drawer-overlay' onClick={()=>setOpen(false)}/>}<aside className={`drawer ${open?'translate-x-0':'translate-x-full'} transition-transform`}><div className='p-4 flex items-center justify-between border-b border-white/10'><h3 className='font-semibold'>Import Data</h3><button className='badge border-white/20' onClick={()=>setOpen(false)}>Close</button></div><div className='p-4 space-y-4'><p className='text-sm text-slate-300'>Upload your Household Snapshot (CSV/XLSX). We’ll auto-map columns and compute dials.</p><input ref={fileRef} type='file' accept='.csv,.xlsx,.xls' onChange={onFile} className='w-full rounded border border-white/10 bg-white/5 p-2'/><div className='text-xs text-slate-400'>{status || "No file selected."}</div><div className='text-xs text-slate-400'>Tip: Required headers include <code>household_id</code>, <code>lines_count</code>, <code>renewal_date</code>, <code>service_touches_12m</code>, <code>avg_minutes_per_touch</code>, <code>remarkets_12m</code>, and <code>est_minutes_per_remarket</code>.</div></div></aside></>) }