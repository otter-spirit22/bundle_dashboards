import type{Metrics}from'./mock';export function computeCoverageDepthPct(rows:any[]):number{const active=rows;const denom=Math.max(active.length,1);const num=active.filter(r=>Number(r.lines_count||0)>=2).length;return num/denom*100}export function computeRemarketingLoadPer100(rows:any[]):number{const active=rows;const renewals=active.filter(r=>r.renewal_date).length;const remarkets=active.reduce((acc,r)=>acc+Number(r.remarkets_12m||0),0);return renewals?remarkets/renewals*100:0}export function computeSTIMinPerHHYr(rows:any[]):number{const active=rows;if(active.length===0)return 0;const mins=active.map(r=>Number(r.service_touches_12m||0)*Number(r.avg_minutes_per_touch||0));const avg=mins.reduce((a,b)=>a+b,0)/active.length;return avg}export function computeTenureAvg(rows:any[]):number{const vals=rows.map(r=>Number(r.tenure_years||0)).filter(v=>!Number.isNaN(v));if(vals.length===0)return 0;return vals.reduce((a,b)=>a+b,0)/vals.length}export function computeTBNHoursTopN(rows:any[],N=12):number{const t_b=2.5,t_u=3.5,cross=2,aht_fallback=5,rm_min_fallback=80;const split=rows.filter(r=>Number(r.bundled_flag||0)===0);const topN=split.slice(0,Math.min(N,split.length));if(topN.length===0)return 0;const deltas=topN.map(r=>{const aht=Number(r.avg_minutes_per_touch||aht_fallback);const rmMin=Number(r.est_minutes_per_remarket||rm_min_fallback);const deltaYear=(t_u-t_b)*aht+((1-0)/5)*rmMin+cross;return deltaYear});const median=deltas.sort((a,b)=>a-b)[Math.floor(deltas.length/2)];return median/12/60*topN.length}export function computeBenchScore(rows:any[]):number{const BR=rows.length?rows.reduce((a,r)=>a+Number(r.bundled_flag||0),0)/rows.length:0;const rl=computeRemarketingLoadPer100(rows);const sti=computeSTIMinPerHHYr(rows);const ten=computeTenureAvg(rows);const brN=Math.max(0,Math.min(1,(BR-0.35)/0.35));const rlN=Math.max(0,Math.min(1,1-rl/35));const stiN=Math.max(0,Math.min(1,1-((sti-60)/60)));const tenN=Math.max(0,Math.min(1,(ten-5)/2.5));const eqN=.5;const score=.25*brN+.20*rlN+.15*stiN+.20*tenN+.20*eqN;return Math.round(score*100)}export function computeAllMetrics(rows:any[]):Metrics{return{coverageDepthPct:computeCoverageDepthPct(rows),remarketingLoadPer100:computeRemarketingLoadPer100(rows),serviceTouchIndexMinPerHHYr:computeSTIMinPerHHYr(rows),tenureAvgYears:computeTenureAvg(rows),tenureMomentumYrsPerYr:.2,timeBackHoursMoTopN:computeTBNHoursTopN(rows),benchScore:computeBenchScore(rows)}}