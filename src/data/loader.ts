import Papa from 'papaparse';import*as XLSX from 'xlsx';export type Household=Record<string,any>;const headerMap:Record<string,string>={hh_id:'household_id',id:'household_id',tenure:'tenure_years',lines:'lines_count',bundled:'bundled_flag',umbrella:'umbrella_flag',remarkets:'remarkets_12m',aht:'avg_minutes_per_touch',minutes_per_touch:'avg_minutes_per_touch',minutes_per_remarket:'est_minutes_per_remarket'};function normalizeHeader(h:string){const key=h.trim().toLowerCase().replace(/\s+/g,'_');return headerMap[key]||key}export async function parseFile(file:File):Promise<Household[]>{const name=file.name.toLowerCase();if(name.endsWith('.csv'))return parseCSV(file);if(name.endsWith('.xlsx')||name.endsWith('.xls'))return parseXLSX(file);throw new Error('Unsupported file type. Please upload CSV or XLSX.')}async function parseCSV(file:File):Promise<Household[]>{return new Promise((resolve,reject)=>{Papa.parse(file,{header:true,skipEmptyLines:true,transformHeader:normalizeHeader,complete:(results)=>resolve(results.data as Household[]),error:(err)=>reject(err),});})}async function parseXLSX(file:File):Promise<Household[]>{const data=await file.arrayBuffer();const wb=XLSX.read(data,{type:'array'});const first=wb.SheetNames[0];const ws=wb.Sheets[first];const raw=XLSX.utils.sheet_to_json(ws,{defval:'',header:1}) as any[][];if(raw.length===0)return[];const headers=(raw[0] as string[]).map(normalizeHeader);const rows=raw.slice(1).map(r=>{const obj:Record<string,any>={};headers.forEach((h,i)=>obj[h]=r[i]);return obj});return rows as Household[]}