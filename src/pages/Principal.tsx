import Kpi from '../components/Kpi';import Gauge from '../components/Gauge';import Bullet from '../components/Bullet';import Spark from '../components/Spark';import InsightCard from '../components/InsightCard';import { mockMetrics, mockInsights } from '../data/mock';import { bands } from '../config/benchmarks';function useMetrics(){const anyWin=(window as any).__BB_METRICS__;return anyWin||mockMetrics}export default function Principal(){const m=useMetrics();return(<div className='mx-auto max-w-6xl p-6 space-y-4'><h1 className='text-xl font-extrabold text-indigo-300'>Principal Dashboard</h1><div className='grid gap-4 md:grid-cols-3'><Gauge value={m.benchScore} max={100} label='BenchScore™'/><Kpi label='Time-Back Number™' value={`${Math.round(m.timeBackHoursMoTopN)} hrs/mo`} metric='benchScore' numeric={m.benchScore} tooltip='Monthly hours reclaimable from Top-N split accounts'/><Kpi label='Coverage Depth' value={`${m.coverageDepthPct.toFixed(0)}%`} metric='coverageDepth' numeric={m.coverageDepthPct/100}/></div><div className='grid gap-4 md:grid-cols-3'><Kpi label='Remarketing Load' value={`${m.remarketingLoadPer100.toFixed(1)} / 100`} metric='remarketingLoad' numeric={m.remarketingLoadPer100}/><Bullet label='Service Touch Index' value={m.serviceTouchIndexMinPerHHYr} target={bands.serviceTouchIndex.healthy} goodIsLow/><Spark label='Tenure Momentum (sim)' points={[6.4,6.5,6.6,6.7,6.8]}/></div><div className='grid gap-4 md:grid-cols-3'>{mockInsights.slice(0,3).map(ins=><InsightCard key={reactkey}{...ins} onAdd={()=>alert(`Added ${ins.title} to plan`)}/>)}</div></div>)}